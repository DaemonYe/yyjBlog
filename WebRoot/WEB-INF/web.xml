<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<!-- 1.覆盖default servlet的/, springmvc servlet将处理原来处理静态资源的映射 -->
	<description>Daemon个人博客</description>
	<display-name>yyjBlog</display-name>
	
	<!-- 2.指定Spring配置文件和初始化监听器 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:/applicationContext.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- 3.在Web层打开Hibernate Session，以便可以在Web层访问到Hibernate延迟加载的数据
	配置Spring的OpenSessionInViewFilter过滤器，以解决Hibernate的懒加载异常（LazyInitializationException）-->
	<filter>
		<filter-name>hibernateFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>hibernateFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>hibernateFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>hibernateFilter</filter-name>
		<url-pattern>*.htm</url-pattern>
	</filter-mapping>
	 
	<!-- 4.过滤器 -->
	<filter>
		<display-name>PrivilegeFilter</display-name>
		<filter-name>PrivilegeFilter</filter-name>
		<filter-class>cn.yeyangjie.web.filter.PrivilegeFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>PrivilegeFilter</filter-name>
		<url-pattern>/jsp/admin/*</url-pattern>
		<url-pattern>/admin/*</url-pattern>
	</filter-mapping>
	 
	<!-- 5.使用Spring的编码转换过滤器，将请求信息的编码统一转换为UTF-8，以避免中文乱码问题 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.htm</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	
	<!-- 6.将.htm为后缀的URL由yyjBlog Servlet处理 -->
	<servlet>
		<servlet-name>yyjBlog</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>3</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>yyjBlog</servlet-name>
		<url-pattern>*.htm</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>/static/*</url-pattern>
	</servlet-mapping>
	<!-- 解决静态资源无法 加载问题-->
	<servlet-mapping>   
         <servlet-name>default</servlet-name>   
         <url-pattern>*.css</url-pattern>   
     </servlet-mapping>   
     <servlet-mapping>   
         <servlet-name>default</servlet-name>   
         <url-pattern>*.png</url-pattern>   
     </servlet-mapping>   
     <servlet-mapping>   
         <servlet-name>default</servlet-name>   
         <url-pattern>*.ico</url-pattern>   
     </servlet-mapping>   
     <servlet-mapping>   
         <servlet-name>default</servlet-name>   
         <url-pattern>*.jpg</url-pattern>   
     </servlet-mapping>   
     <servlet-mapping>   
         <servlet-name>default</servlet-name>   
         <url-pattern>*.js</url-pattern>   
     </servlet-mapping> 
     <servlet-mapping>   
         <servlet-name>default</servlet-name>   
         <url-pattern>*.txt</url-pattern>   
     </servlet-mapping> 
     <servlet-mapping>   
         <servlet-name>default</servlet-name>   
         <url-pattern>*.map</url-pattern>   
     </servlet-mapping> 
	
	<!-- 7.浏览器不支持put,delete等method,由该HiddenHttpMethodFilter将xxx?_method=delete 
	 	        或 xxx?_method=put 转换为标准的http delete、put 方法-->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<servlet-name>yyjBlog</servlet-name>
	</filter-mapping>
	
  	<welcome-file-list>
    	<welcome-file>index.jsp</welcome-file>
  	</welcome-file-list>
</web-app>
